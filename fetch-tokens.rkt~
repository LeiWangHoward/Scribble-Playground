#lang racket
(require syntax-color/module-lexer)
(define (get-them file)
  (call-with-input-file file
    (Î» (port)
      (let loop ([mode #f])
        (define-values (str/eof token-symbol paren start end backup-dist new-mode)
          (module-lexer port 0 mode))
        (cond
          [(eof-object? str/eof) '()]
          [else (cons token-symbol (loop new-mode))])))))

(get-them "